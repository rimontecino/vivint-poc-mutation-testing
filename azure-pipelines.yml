trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
# 1) Ensure .NET 8 SDK is on the agent
- task: UseDotNet@2
  displayName: 'Install .NET 8 SDK'
  inputs:
    packageType: 'sdk'
    version: '8.x'

# 2) Restore / Build / Test using the .NET SDK tasks
- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: 'restore'
    projects: 'MutationTesting.sln'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: 'MutationTesting.sln'
    arguments: '--configuration $(buildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: 'test'
    projects: 'MutationTesting.Tests/MutationTesting.Tests.csproj'
    arguments: '--configuration $(buildConfiguration) --no-build'

# 3) Make Stryker available (reads .config/dotnet-tools.json)
- script: dotnet tool restore
  displayName: 'Restore dotnet tools (coverlet, stryker)'

# 4) Run Stryker from the TEST PROJECT folder
- script: dotnet stryker
  workingDirectory: $(Build.SourcesDirectory)/MutationTesting.Tests
  displayName: 'Run Stryker (HTML + Dashboard)'
  env:
    STRYKER_DASHBOARD_API_KEY: $(STRYKER_DASHBOARD_API_KEY)

# 5) List the tree so we can see the exact folder in logs (for debugging)
- pwsh: |
    $p = "$(Build.SourcesDirectory)/MutationTesting.Tests/StrykerOutput"
    if (Test-Path $p) {
      Get-ChildItem -Recurse $p | Select-Object FullName
    } else {
      Write-Host "No StrykerOutput found."
    }
  displayName: 'List StrykerOutput tree'

# 6) Copy all report files to a known staging folder
- task: CopyFiles@2
  displayName: 'Stage Stryker HTML report'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/MutationTesting.Tests'
    Contents: 'StrykerOutput/**/reports/**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/stryker-report'

# 7) Publish the HTML mutation report as a downloadable artifact
- task: PublishBuildArtifacts@1
  displayName: 'Publish Stryker HTML report'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/stryker-report'
    ArtifactName: 'stryker-report'

- task: PublishMutationReport@1
  displayName: 'Publish Mutation Test Report'
  inputs:
    reportPattern: '**/mutation-report.html'